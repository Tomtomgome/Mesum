#pragma once

#include "Input.hpp"
#include "Keys.hpp"

///////////////////////////////////////////////////////////////////////////////
/// \addtogroup Core
/// \{
///////////////////////////////////////////////////////////////////////////////
namespace m::input
{
///////////////////////////////////////////////////////////////////////////////
/// \brief Implementation of an input manager
///
/// User can attach callbacks to events that will be called immediately when
/// the event is read
///////////////////////////////////////////////////////////////////////////////
class mStateInputManager : public mIInputManager
{
   public:
    mStateInputManager();
    ~mStateInputManager();

    void       process_keyEvent(mKey a_key, mInputType a_action) override;
    mInputType get_keyState(mKey a_key) const;

   private:
    std::array<mInputType, mKey::keyLast> m_keyState;
};
}  // namespace m::input
///////////////////////////////////////////////////////////////////////////////
/// \}
///////////////////////////////////////////////////////////////////////////////