#pragma once

#include "MathTypes.hpp"

///////////////////////////////////////////////////////////////////////////////
/// \addtogroup Core
/// \{
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
/// \brief Namespace for math related utils
///////////////////////////////////////////////////////////////////////////////
namespace m::math
{
///////////////////////////////////////////////////////////////////////////////
/// \brief Structure representing a math quaternion
///////////////////////////////////////////////////////////////////////////////
struct mQuaternion : public mVecData<float, 4>
{
    ///////////////////////////////////////////////////////////////////////////////
    /// \brief Returns a TODO
    ///
    /// \param a_fromDirection TODO
    /// \param a_toDirection TODO
    ///////////////////////////////////////////////////////////////////////////////
    mQuaternion(mVec3 const& a_fromDirection, mVec3 const& a_toDirection);

    ///////////////////////////////////////////////////////////////////////////////
    /// \brief Returns a TODO
    ///////////////////////////////////////////////////////////////////////////////
    mQuaternion(mFloat a_x, mFloat a_y, mFloat a_z, mFloat a_w);
};

mVec3 operator*(mQuaternion const& a_q, mVec3 const& a_v);

};  // namespace m::math

///////////////////////////////////////////////////////////////////////////////
/// \}
///////////////////////////////////////////////////////////////////////////////